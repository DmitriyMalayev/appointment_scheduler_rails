<h1>Appointments</h1>
<button><%= link_to "Add Appointment", :new_appointment_path %></button>
<%= form_tag(appointment_path) method: "get" do %>

  <label for="filter_by_time">Filter By Time</label>   <%# selected makes it match what's in params %>
  <select name="filter_by_time">
    <option <%= 'selected' if params[:filter_by_time] == "" %> value="">All</option>
    <option <%= 'selected' if params[:filter_by_time] == "" %> value="past">Past</option>
    <option <%= 'selected' if params[:filter_by_time] == "" %> value="upcoming">Upcoming</option>
  </select>  
  <label for="sort">Sort</label>
  <select name="sort">
    <option <%= 'selected' if params[:sort] == "" %> value="">None</option>
    <option <%= 'selected' if params[:sort] == "" %> value="most_recent">Most Recent</option>
    <option <%= 'selected' if params[:sort] == "" %> value="longest_ago">Longest Ago</option>
  </select>
  <%= submit_tag "Filter Results" %>
<% end %>
<%# This allows a user to customize what they see in the appointments index template. 
We want to give users the ability to use scope methods within the view 
%>
<% @appointments.each do |appointment| %>
  <%= link_to appointment.patient_name, patient_path(appointment.patient) %> has an appointment at <%= link_to appointment.start_time.strftime("%b %e, %l:%M %p"), appointment_path(appointment) %> with <%= appointment.doctor_name, doctor_path(appointment.doctor) %>
  <%# We can look at the schema, and see what @appointments has access to and implement the methods that we have. Both the ones made by macros and the custom methods we have made.  ?? %>
